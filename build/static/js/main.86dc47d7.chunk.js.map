{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactsListItem/ContactsListItem.module.scss","components/ContactLIst/ContactList.module.scss","components/Filter/Filter.module.scss","redux/contacts/contactsSlice.js","components/ContactForm/ContactForm.js","components/ContactsListItem/ContactsListItem.js","components/ContactLIst/ContactList.js","redux/contacts/contacts-actions.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reduser.js","redux/store.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","contactName","body","name","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","ContactForm","useState","setContactname","number","setNumber","isLoading","data","contacts","setContacts","useEffect","handlerChange","e","value","currentTarget","className","s","form","onSubmit","preventDefault","find","contact","toast","error","success","autoClose","label","input","type","pattern","title","required","onChange","autoComplete","button","disabled","color","height","width","timeout","ContactsListItem","id","item","onClick","connect","filter","isFetching","contactsList","setContastsList","filteredContactList","getFilteredContactList","allContacts","filterValue","toLocaleLowerCase","includes","loader","list","map","changeFilter","createAction","dispatch","filteredValue","contactsActions","App","createReducer","actions","_","payload","store","configureStore","reducer","filterReduser","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86dc47d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__27BtK\",\"button\":\"ContactForm_button__3rip_\",\"input\":\"ContactForm_input__3ooQy\",\"label\":\"ContactForm_label__3a2i2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactsListItem_number__3SPzV\",\"button\":\"ContactsListItem_button__1UyAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2vlrj\",\"item\":\"ContactList_item__r8oT7\",\"number\":\"ContactList_number__2Hze7\",\"loader\":\"ContactList_loader__3_b9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1803l\",\"input\":\"Filter_input__1ZY6n\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://61a26152014e1900176de917.mockapi.io/' }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: (builder) => ({\r\n    fetchContacts: builder.query({\r\n        query: () => `/contacts`,\r\n        providesTags: ['Contacts'],\r\n    }),\r\n      deleteContact: builder.mutation({\r\n          query: contactId => ({\r\n              url: `/contacts/${contactId}`,\r\n              method: 'DELETE'\r\n          }),\r\n          invalidatesTags: ['Contacts']\r\n      }),\r\n      createContact: builder.mutation({\r\n          query: (contactName) => ({\r\n              url: '/contacts',\r\n              method: 'POST',\r\n              body: {\r\n                  name: contactName,\r\n              }\r\n          }),\r\n          invalidatesTags: ['Contacts']\r\n      })\r\n  }),\r\n})\r\n\r\nexport const { useFetchContactsQuery, useDeleteContactMutation, useCreateContactMutation } = contactsApi;","import React from \"react\";\r\nimport { useState, useEffect} from \"react\";\r\nimport s from './ContactForm.module.scss';\r\nimport { toast } from 'react-toastify'\r\nimport Loader from \"react-loader-spinner\";\r\nimport {useFetchContactsQuery,useCreateContactMutation} from '../../redux/contacts/contactsSlice'\r\n\r\nfunction ContactForm() {\r\n    const [contactName, setContactname] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const [createContact, { isLoading}] = useCreateContactMutation();\r\n    const { data} = useFetchContactsQuery();\r\n    const [contacts, setContacts] = useState([]);\r\n\r\n       useEffect(() => {\r\n        setContacts(data);\r\n    }, [data]);\r\n \r\n    const findContact = () => {\r\n     return contacts.find((contact) => contact.name === contactName)\r\n    }\r\n    \r\n    const handlerChange = e => {\r\n        const { value } = e.currentTarget;\r\n        switch (e.currentTarget.name) {\r\n            case 'name': setContactname(value);\r\n                break\r\n            case 'number': setNumber(value);\r\n                break;\r\n            default: return;\r\n        }        \r\n    };\r\n\r\n   const  reset = () => {\r\n        setContactname('');\r\n        setNumber('');\r\n    }\r\n    \r\n    const handlerSubmit = e => {\r\n        e.preventDefault();\r\n        if (findContact()) {\r\n               toast.error( contactName + ' is already in contacts' )\r\n            return;\r\n        }\r\n        createContact(contactName);\r\n        toast.success(contactName + 'added successfully to address book', {autoClose: 2000})\r\n        reset();\r\n    }\r\n        return (\r\n            <form className={s.form} onSubmit={handlerSubmit}>\r\n                <label className={s.label}>\r\n                    Name\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={contactName}\r\n                        onChange={handlerChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <label className={s.label}>\r\n                    Number\r\n                    <input\r\n                        className={s.input}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={handlerChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </label>\r\n                <button type='submit' className={s.button} disabled={isLoading}>Add contact\r\n                {isLoading && <Loader type=\"TailSpin\"\r\n                    color=\"#00BFFF\"\r\n                    height={12}\r\n                    width={12}\r\n                    timeout={20000}\r\n                    /> }\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\nexport default ContactForm;\r\n","import { useDeleteContactMutation } from '../../redux/contacts/contactsSlice';\r\nimport s from './ContactsListItem.module.scss'\r\n\r\nexport const ContactsListItem = ({name, id, number}) => {\r\n    const [deleteContact, {isLoading}] = useDeleteContactMutation();\r\n    \r\n    return (\r\n     <li className={s.item}><span className={s.name}>{name}</span>:<span className={s.number}>{number}</span> \r\n            <button className={s.button} type='button' onClick={() => deleteContact(id)} disabled={isLoading}>{isLoading ? 'Deleting...' : 'Delete' }</button></li>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { connect} from \"react-redux\";\r\nimport s from './ContactList.module.scss';\r\nimport Loader from \"react-loader-spinner\";\r\nimport {ContactsListItem} from '../ContactsListItem/ContactsListItem'\r\nimport { useFetchContactsQuery} from '../../redux/contacts/contactsSlice';\r\n\r\n\r\nfunction ContactList({filter}) {\r\n    \r\n    const { data, isFetching } = useFetchContactsQuery();\r\n    const [contacts, setContacts] = useState([]);\r\n    const [contactsList, setContastsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setContacts(data);\r\n        setContastsList(data);\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        const filteredContactList = getFilteredContactList(contactsList, filter);\r\n        setContacts(filteredContactList);\r\n    }, [filter])\r\n\r\n    const getFilteredContactList = (allContacts, filterValue) => {\r\n            return allContacts.filter(\r\n      contact => contact.name.toLocaleLowerCase()\r\n        .includes(filterValue.toLocaleLowerCase())\r\n    )\r\n  } \r\n    return (\r\n        <>\r\n            {isFetching && <div className={s.loader} ><Loader type=\"TailSpin\"\r\n                    color=\"#00BFFF\"\r\n                    height={80}\r\n                    width={80}\r\n                    timeout={20000}\r\n                    /></div>}\r\n        <ul className={s.list}>\r\n                {contacts && contacts.map(contact => (<ContactsListItem key={contact.id} {...contact}/>)\r\n                \r\n                )}\r\n            </ul>\r\n        </>    \r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({filter}) => ({\r\n    filter: filter\r\n})\r\n\r\nexport default connect(mapStateToProps)(ContactList);","import { createAction } from '@reduxjs/toolkit'\r\n\r\nconst changeFilter = createAction('contacts/changeFilter')\r\n\r\nexport default { changeFilter };","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from './Filter.module.scss'\r\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\r\n\r\nfunction Filter({onChange}) {\r\n    const handlerChange = e => {\r\n        const filteredValue = e.currentTarget.value;\r\n        onChange(filteredValue);\r\n    }\r\n    return (\r\n        <label className={s.label}>\r\n            Find contact by name\r\n            <input className={s.input} type=\"text\" autoComplete=\"off\"\r\n                onChange={handlerChange} />\r\n        </label>\r\n    )  \r\n}\r\n\r\nFilter.propTypes = {\r\n   handlerChange: PropTypes.func\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>  ({\r\n    onChange: (filteredValue) => dispatch(contactsActions.changeFilter(filteredValue))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(Filter)","import \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactLIst\";\nimport Filter from \"./components/Filter\";\nimport { ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App () {\n    return (\n      <div className='container'>\n        <h1>PhoneBook</h1>\n        <ContactForm/>\n        <h1>Contacts</h1>\n        <Filter />\n        <ContactList />\n        <ToastContainer />\n      </div>\n    ) \n  };\n\nexport default App;\n\n\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport actions from './contacts-actions'\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload\r\n})\r\n\r\nexport default filter;\r\n","import { configureStore, getDefaultMiddleware, } from '@reduxjs/toolkit';\r\nimport filterReduser from './contacts/contacts-reduser';\r\nimport { contactsApi } from './contacts/contactsSlice';\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReduser,\r\n  },\r\n  middleware: getDefaultMiddleware => [\r\n    ...getDefaultMiddleware(),\r\n    contactsApi.middleware,\r\n  ]\r\n})\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}